name: ❄️ Lint

on: [pull_request, push]

jobs:
  markdownlint:
    name: 🍇 Markdown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🚀 Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm install -g markdownlint-cli@0.25.0
      - run: markdownlint '**/*.md' --ignore node_modules
  misspell:
    name: 💼 misspell
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v3
      - name: Install
        run: |
          wget -O - -q https://git.io/misspell | sh -s -- -b .
      - name: Misspell
        run: |
          find . -type f -maxdepth 1 | xargs ./misspell -error
          find . -name "*.go" -type f | xargs ./misspell -error
          find docs -type f | xargs ./misspell -error
          find web/src web/cypress -type f | xargs ./misspell -error
  yamllint:
    name: 🍏 YAML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64'  # optional x64 or x86. Defaults to x64 if not specified
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yamllint
      - name: 🧹 YAML Lint
        run: |
          # return non-zero exit code on warnings
          yamllint --strict .
  trailing-whitespace:
    name: 🐞 Trailing whitespace
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check for trailing whitespace
        run: "! git grep -EIn $'[ \t]+$'"
  golangci:
    name: 🐯 golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --tests=false
  gofmt:
    runs-on: ubuntu-latest
    name: 🐔 gofmt
    steps:
      - uses: actions/checkout@v3
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: check gofmt
        run: |
          diffs=`gofmt -l ${{ needs.go-filter.outputs.files }}`
          if [[ -n $diffs ]]; then
              echo "Files are not formatted by gofmt:"
              echo $diffs
              exit 1
          fi
